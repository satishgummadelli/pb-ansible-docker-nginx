---
# tasks file for docker-nginx
---
- name: Create Nginx {{ item }} directory
  file: path={{ nginx_settings_path }}/{{ item }} state=directory
  with_items:
    - 'conf.d'
    - 'certs'

- name: Render hosts nginx configs
  template: >-
    src={{ item.configuration_file }}
    dest={{ nginx_settings_path }}/conf.d/{{ item.name }}.conf
  with_items: '{{ nginx_hosts }}'
  notify:
    - Restart nginx

- name: Create certificate directories
  file: path={{ nginx_settings_path }}/certs/{{ item.name }} state=directory
  with_items: '{{ nginx_hosts }}'
  when: '{{ item.https }}'

- name: Render hosts certificate bundles
  copy:
    src: '{{ item.ssl_certificate_bundle }}'
    dest: '{{ nginx_settings_path }}/certs/{{ item.name }}/bundle.crt'
  with_items: '{{ nginx_hosts }}'
  when: '{{ item.https }}'
  notify:
    - Restart nginx

- name: Render hosts certificate keys
  copy:
    src: '{{ item.ssl_certificate_key }}'
    dest: '{{ nginx_settings_path }}/certs/{{ item.name }}/bundle.key'
  with_items: '{{ nginx_hosts }}'
  when: '{{ item.https }}'
  notify:
    - Restart nginx

- name: Run nginx server
  docker_container:
    name: '{{ nginx_container_name }}'
    image: '{{ nginx_docker_image }}:{{ nginx_docker_image_tag }}'
    state: started
    network_mode: host
    restart_policy: always
    memory: '{{ container_memory_limit }}'
    volumes:
      - '{{ nginx_settings_path }}/conf.d:/etc/nginx/conf.d:ro'
      - '{{ nginx_settings_path }}/certs:/etc/certs:ro'
  register: nginx_container
